plugins {
    id "org.quiltmc.loom" version "1.+"
    id 'maven-publish'
    id 'idea'
    id "com.matthewprenger.cursegradle" version "1.4.+"
    id "com.modrinth.minotaur" version "2.+"
}

archivesBaseName = rootProject.archivesBaseName + '-quilt'
project.ext.mixin_refmap = "${archivesBaseName}-refmap.json"

repositories {
    maven {
        name = 'TerraformersMC'
        url = 'https://maven.terraformersmc.com/releases/'
        content {
            includeGroup 'com.terraformersmc'
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${project.parchment_minecraft_version}:${project.parchment_mappings_version}@zip")
    }
    modImplementation "org.quiltmc:quilt-loader:${quilt_loader_version}"
    modImplementation "org.quiltmc:qsl:${qsl_version}+${minecraft_version}"
    modImplementation "org.quiltmc.quilted-fabric-api:quilted-fabric-api:${quilted_fabric_api_version}-${minecraft_version}"
    modCompileOnly "com.terraformersmc:modmenu:${mod_menu_version}"
    modLocalRuntime "com.terraformersmc:modmenu:${mod_menu_version}"

    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
    implementation project(":Common")
}

loom {
    runs {
        client {
            client()
            setConfigName("Quilt Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Quilt Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}


processResources {
    from project(":Common").sourceSets.main.resources
    inputs.property "version", project.version

    filesMatching("quilt.mod.json") {
        expand "version": project.version
    }

    filesMatching("mixins.*.json") {
        expand "mixin_refmap": project.ext.mixin_refmap
    }
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java
        }
    }

    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}

curseforge {

    def curseforgeToken = System.getenv("CURSEFORGE_TOKEN")
    if (curseforgeToken) {
        apiKey = curseforgeToken
    }

    project {
        id = project.curseforge_project_id
        changelogType = "markdown"
        changelog = project.ext.changelog
        releaseType = project.release_type
        "${project.supported_versions}".split(',').each {
            addGameVersion "${it}"
        }
        addGameVersion "Quilt"
        addGameVersion "Java 17"

        mainArtifact(remapJar) {
            displayName = "[Quilt] Transmog $project.version"
        }
        addArtifact(sourcesJar)
        relations {
            requiredDependency("qsl")
        }

        afterEvaluate {
            uploadTask.dependsOn("remapJar")
        }
    }

    options {
        forgeGradleIntegration = false
    }
}

modrinth {
    projectId = project.modrinth_project_id
    versionName = "[Quilt] Transmog $project.version"
    versionNumber = "quilt-${project.version}"
    versionType = project.release_type
    changelog = project.ext.changelog
    uploadFile = remapJar
    additionalFiles = [sourcesJar]
    gameVersions = "${project.supported_versions}".split(',') as List<String>
    loaders = ["quilt"]
    dependencies {
        required.project "qsl"
    }
}